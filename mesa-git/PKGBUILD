# Maintainer: Edward Davis <idlyby@proton.me>
# Contributor: Reza Jahanbakhshi <reza.jahanbakhshi at gmail dot com
# Contributor: Lone_Wolf <lone_wolf@klaas-de-kat.nl>
# Contributor: Armin K. <krejzi at email dot com>
# Contributor: Kristian Klausen <klausenbusk@hotmail.com>
# Contributor: Egon Ashrafinia <e.ashrafinia@gmail.com>
# Contributor: Tavian Barnes <tavianator@gmail.com>
# Contributor: Jan de Groot <jgc@archlinux.org>
# Contributor: Andreas Radke <andyrtr@archlinux.org>
# Contributor: Thomas Dziedzic < gostrc at gmail >
# Contributor: Antti "Tera" Oja <antti.bofh@gmail.com>
# Contributor: Diego Jose <diegoxter1006@gmail.com>

pkgname=mesa-git
pkgdesc="an open-source implementation of the OpenGL specification, git version"
pkgver=25.3.0_devel.213029.4e8f01b8641.d41d8cd
pkgrel=1
arch=('x86_64')
makedepends=(
  'git'
  'xorgproto'
  'libxml2'
  'libvdpau'
  'libva'
  'elfutils'
  'libxrandr'
  'meson'
  'ninja'
  'glslang'
  'directx-headers-git'
  'python-mako'
  'python-ply'
  'cbindgen'
  'wayland-protocols'
  'cmake'
  'python-packaging'
  'python-pyaml'
  'llvm'
  'clang'
  'libclc'
  'spirv-llvm-translator'
  'spirv-tools'
  'rust'
  'rust-bindgen'
)
depends=(
  'libdrm'
  'libxxf86vm'
  'libxdamage'
  'libxshmfence'
  'libelf'
  'libunwind'
  'libglvnd'
  'wayland'
  'lm_sensors'
  'vulkan-icd-loader'
  'zstd'
  'expat'
  'gcc-libs'
  'libxfixes'
  'libx11'
  'systemd-libs'
  'libxext'
  'libxcb'
  'glibc'
  'zlib'
  'python'
  'xcb-util-keysyms'
  'llvm-libs'
  'clang'
  'libclc'
  'spirv-llvm-translator'
  'spirv-tools'
)
optdepends=('opengl-man-pages: for the OpenGL API man pages')
provides=(
  'vulkan-mesa-layers'
  'opencl-driver'
  'opencl-rusticl-mesa'
  'opengl-driver'
  'vulkan-driver'
  'vulkan-radeon'
  'libva-mesa-driver'
  'mesa-vdpau'
  'mesa-libgl'
  'mesa'
)
conflicts=(
  'vulkan-mesa-layers'
  'opencl-clover-mesa'
  'opencl-rusticl-mesa'
  'vulkan-intel'
  'vulkan-nouveau'
  'vulkan-radeon'
  'vulkan-swrast'
  'vulkan-virtio'
  'libva-mesa-driver'
  'mesa-vdpau'
  'mesa-libgl'
  'mesa'
)
url="https://www.mesa3d.org"
license=('custom')
# https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/29275
source=(
  'mesa::git+https://gitlab.freedesktop.org/mesa/mesa.git#branch=main'
  'LICENSE'
)
sha256sums=(
  'SKIP'
  '7fdc119cf53c8ca65396ea73f6d10af641ba41ea1dd2bd44a824726e01c8b3f2'
  '39278fbbf5fb4f646ce651690877f89d1c5811a3d4acb27700c1cb3cdb78fd3b'
  '3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b'
  '5267fca4496028628a95160fc423a33e8b2e6af8a5302579e322e4b520293cae'
  '23e78b90f2fcf45d3e842032ce32e3f2d1545ba6636271dcbf24fa306d87be7a'
)
b2sums=(
  'SKIP'
  'cc60238726b35133b5b729fb4ed1e76e04136588533615d84b4a54656d5b41727d5e7ff06ef4de3eb102eed6669d6c5c5cb8ac9fbdf6fc25aa477877c5c3ba87'
  'fff0dec06b21e391783cc136790238acb783780eaedcf14875a350e7ceb46fdc100c8b9e3f09fb7f4c2196c25d4c6b61e574c0dad762d94533b628faab68cf5c'
  '4cede03c08758ccd6bf53a0d0057d7542dfdd0c93d342e89f3b90460be85518a9fd24958d8b1da2b5a09b5ddbee8a4263982194158e171c2bba3e394d88d6dac'
  '77c4b166f1200e1ee2ab94a5014acd334c1fe4b7d72851d73768d491c56c6779a0882a304c1f30c88732a6168351f0f786b10516ae537cff993892a749175848'
  '2cff6626624d03f70f1662af45a8644c28a9f92e2dfe38999bef3ba4a4c1ce825ae598277e9cb7abd5585eebfb17b239effc8d0bbf1c6ac196499f0d288e5e01'
)


options=(!lto !debug)
# lto and debug are disabled manually through meson -D flags, but it feels cleaner to also list them here.

# Rust crates for NVK, used as Meson subprojects
declare -A _crates=(
   proc-macro2    1.0.70
   quote          1.0.33
   syn            2.0.39
   unicode-ident  1.0.12
)

for _crate in "${!_crates[@]}"; do
  source+=($_crate-${_crates[$_crate]}.tar.gz::https://crates.io/api/v1/crates/$_crate/${_crates[$_crate]}/download)
done

pkgver() {
  cd mesa
  local _ver
  _ver=$(<VERSION)

  local _patchver
  local _patchfile
  for _patchfile in "${source[@]}"; do
    _patchfile="${_patchfile%%::*}"
    _patchfile="${_patchfile##*/}"
    [[ $_patchfile = *.patch ]] || continue
    _patchver="${_patchver}$(md5sum ${srcdir}/${_patchfile} | cut -c1-32)"
  done
  _patchver="$(echo -n $_patchver | md5sum | cut -c1-7)"

  echo ${_ver/-/_}.$(git rev-list --count HEAD).$(git rev-parse --short HEAD).${_patchver}
}

prepare() {
  # although removing _build folder in build() function feels more natural,
  # that interferes with the spirit of makepkg --noextract
  if [  -d _build ]; then
    rm -rf _build
  fi

  # Ugly hack to allow recompilation using gamescope.path
  if [ -f "mesa/src/egl/wayland/wayland-drm/gamescope-commit-queue-v1.xml" ]; then
    rm -rf "mesa/src/egl/wayland/wayland-drm/gamescope-commit-queue-v1.xml"
  fi

  # Include package release in version string so Chromium invalidates
  # its GPU cache; otherwise it can cause pages to render incorrectly.
  # https://bugs.launchpad.net/ubuntu/+source/chromium-browser/+bug/2020604
  echo "$pkgver-$pkgrel" >VERSION

  local _patchfile
  for _patchfile in "${source[@]}"; do
    _patchfile="${_patchfile%%::*}"
    _patchfile="${_patchfile##*/}"
    [[ $_patchfile = *.patch ]] || continue
    echo "Applying patch $_patchfile..."
    patch --directory=mesa --forward --strip=1 --input="${srcdir}/${_patchfile}"
  done
}

build () {
  local meson_options=(
    -D android-libbacktrace=disabled
    -D b_ndebug=true
    -D b_lto=false
    -D b_pgo=off
    -D egl=enabled
    -D gallium-drivers=radeonsi,softpipe,llvmpipe,zink
    -D gallium-extra-hud=true
    -D gallium-mediafoundation=disabled
    -D gallium-rusticl=true
    -D gallium-va=enabled
    -D gbm=enabled
    -D gles1=disabled
    -D gles2=enabled
    -D glvnd=enabled
    -D glx=dri
    -D intel-rt=disabled
    -D legacy-x11=dri2
    -D libunwind=disabled
    -D llvm=enabled
    -D lmsensors=enabled
    -D microsoft-clc=disabled
    -D platforms=x11,wayland
    -D rust_std=2021
    -D valgrind=disabled
    -D video-codecs=all
    -D vulkan-drivers=amd
    -D vulkan-layers=device-select,intel-nullhw,overlay,anti-lag
    -D vulkan-beta=true
    -D tools=[]
    -D zstd=enabled
    -D buildtype=plain
    --wrap-mode=nofallback
    --force-fallback-for=syn,paste,rustc-hash
    -D prefix=/usr
    -D sysconfdir=/etc
  )

  # Build with native cpu, graphite and minimal debug
  CFLAGS+=' -march=native -fgraphite-identity -floop-strip-mine -floop-nest-optimize -fno-semantic-interposition -fipa-pta -g1'
  CXXFLAGS+=' -march=native -fgraphite-identity -floop-strip-mine -floop-nest-optimize -fno-semantic-interposition -fipa-pta -g1'
  
  meson setup mesa _build "${meson_options[@]}"
  meson configure --no-pager _build
  ninja $NINJAFLAGS -C _build
}

package() {
  DESTDIR="${pkgdir}" ninja $NINJAFLAGS -C _build install

  # remove script file from /usr/bin
  # https://gitlab.freedesktop.org/mesa/mesa/issues/2230
  find "${pkgdir}/usr/bin" -type f -name "*.py" -exec rm {} \;
  rmdir "${pkgdir}/usr/bin"

  # indirect rendering
  ln -s /usr/lib/libGLX_mesa.so.0 "${pkgdir}/usr/lib/libGLX_indirect.so.0"
 
  install -m644 -Dt "${pkgdir}/usr/share/licenses/${pkgname}" "${srcdir}/LICENSE"
}
